<?php
// $Id$

define(ASCII_ART_CAPTCHA_DEFAULT_ALLOWED_CHARACTERS, 'aAbBcCdDeEfFgGhHijkKLmMnNpPqQrRsStTuUvVwWxXyYzZ123456789');

require_once(drupal_get_path('module', 'css_captcha') .'/../text_captcha/text_captcha.inc');

/**
 * Implementation of hook_help().
 */
function ascii_art_captcha_help($section) {
  switch ($section) {
    case 'admin/user/captcha/ascii_art_captcha':
      return '<p>'. t('TODO.') .'</p>' ;
  }
}

/**
 * Implementation of hook_menu().
 */
function ascii_art_captcha_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
      'path' => 'admin/user/captcha/ascii_art_captcha',
      'title' => t('ASCII art CAPTCHA'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('ascii_art_captcha_settings_form'),
      'type' => MENU_LOCAL_TASK,
    );
  }
  return $items;
}

/**
 * Function for the settings form
 */
function ascii_art_captcha_settings_form() {
  $form = array();
  $form['ascii_art_captcha_code_length'] = array(
    '#type' => 'select',
    '#title' => t('Code length'),
    '#options' => array(4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 10 => 10),
    '#default_value' => (int) variable_get('ascii_art_captcha_code_length', 6),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_captcha
 */
function ascii_art_captcha_captcha($op, $captcha_type='', $response='') {
  switch ($op) {
    case 'list':
      return array('ASCII art CAPTCHA');
    case 'generate':
      if ($captcha_type == "ASCII art CAPTCHA") {
        // get settings
        $allowed_chars = _text_captcha_utf8_split(CSS_CAPTCHA_DEFAULT_ALLOWED_CHARACTERS);
        $code_length = (int) variable_get('ascii_art_captcha_code_length', 6);
        // load font
        require_once('ascii_art_captcha_font.inc');
        $font = ascii_art_captcha_font();
        // build solution and ASCII art array
        $solution = '';
        $ascii_lines = array();
        for ($i = 0; $i < $font['height']; $i++) {
          $ascii_lines[$i] = '';
        }
        for ($i = 0; $i < $code_length; $i++) {
          $character = $allowed_chars[array_rand($allowed_chars)];
          $solution .= $character;
          foreach ($font[$character] as $l => $line) {
            $ascii_lines[$l] .= $line;
          }
        }
        // build CAPTCHA
        $captcha = array();
        $captcha['solution'] = $solution;
        $captcha['form']['ascii'] = array(
          '#type' => 'markup',
          '#value' => '<pre class="ascii_art_captcha">'. implode('<br />', $ascii_lines) .'</pre>',
        );
        $captcha['form']['captcha_response'] = array(
          '#type' => 'textfield',
          '#title' => t('Enter the code above'),
          '#size' => 10,
          '#maxlength' => 10,
          '#required' => TRUE,
          '#description' => t('Enter the code depicted in ASCII art style.')
        );
        $captcha['preprocess'] = FALSE;
        return $captcha;
      }
    break;
  }
}
